#+TITLE:     Debian快速安装指导
#+AUTHOR:    王晓林
#+EMAIL:     wx672ster@gmail.com
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  cn
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
#+LATEX_CLASS: wx672ctexart

# (setq org-export-html-use-infojs nil)

* UEFI
现在（2018年10月）的电脑都很新潮，在主板上几乎都用UEFI取代了传统的BIOS。关于UEFI设置，我的
经验是：
- 把下列和Windows相关的选项都关掉（disable）:
  - =Secure boot=
  - =QuickBoot/FastBoot=
  - =Intel Smart Response Technology (SRT)=
  - =FastStartup=
- 如果在下面的安装过程中（硬盘分区的时候）看不到硬盘，那么你需要在UEFI设置里找到Intel Rapid Storage
  Technology (Intel RST)，把它设置为AHCI。
* 安装
安装Debian系统的大致步骤如下：
1. 先准备好一个安装盘（LiveUSB）。 【注意】 *一定要是64位的LiveUSB！*
   1) *下载:* [[http://mirrors.163.com/debian-cd/current/amd64/iso-cd/]]
      - 该目录中有三个（也许更多）iso文件，比如：
        : debian-9.5.0-amd64-netinst.iso        14-Jul-2018 19:12    291M
        : debian-9.5.0-amd64-xfce-CD-1.iso      14-Jul-2018 19:12    640M
        : debian-mac-9.5.0-amd64-netinst.iso    14-Jul-2018 19:12    294M
        下载名字最短的那个就好。
   2) *制作U盘:* 在Debian/Ubuntu平台上制作启动U盘非常简单，敲个命令就行了：
      #+BEGIN_SRC sh
      sudo cp debian-9.5.0-amd64-netinst.iso /dev/sdX
      sudo sync
      #+END_SRC
      【注意】
      1. 把 =debian-9.5.0-amd64-netinst.iso= 换成你下载的iso文件的名字。文件名太长容易敲错，
         那么就尽量用TAB键来补全。比如说，对于上面的长命令，你只需要键入前几个字母：
         #+BEGIN_SRC sh 
         sudo cp deb
         #+END_SRC
         然后按一下 =TAB= 键，长长的文件名就自动都补全了。
      2. 把 =X= 换成你的U盘对应的字母。用 =lsblk= 看一眼，你就知道是哪个字母了，通常不是b就是c。
2. 拔掉网线，从U盘重启系统，开始安装。大概半个小时，一个“最小系统”就装好了。
3. 完事后，拔掉U盘，重启系统。

   【注意】
   + 安装的时候不要选择中文语言环境，因为后面的安装配置工作都是在非图形环境下进行，
     采用中文的话，你很可能会遭遇乱码。
   + 硬盘分区的时候，
     - 如果你是装Linux单系统，就非常简单，没啥可说的；
     - 如果你是要装双系统（保留原来的Windows），那么，有三点烦，
       1. 可用空间不够怎么办？删掉哪个分区？如何压缩原来的Windows分区？总之，烦！
       2. 以后，霸道的Windows每次升级、更新，都会让你的Linux消失……
       3. 装了双系统之后，通常（不争气的）你会选用熟悉的Windows系统，渐渐地，过不了多久，你就忘了电
          脑上还有一个Linux系统。
       所以，我很不愿意搭理装双系统的人。
# 4. 如果Debian系统起不来，或者GRUB2菜单里面的Windows出现问题，
#    那么就找一个功能稍微全面点的LiveUSB，比如Ubuntu安装盘。
#    从U盘启动，选择 =Try Ubuntu=, 然后运行 =boot-repair= 来修复一下。
#    - *Boot-Repair:* https://help.ubuntu.com/community/Boot-Repair

* 安装配置
# 下面的安装配置说明完全是针对Debian系统。我们学院的机房系统已经统一换成了Debian Testing。
# 而且去掉了容易出毛病的花哨界面，只用 =startx= + =sawfish= 。
# 这也许不算完美，但它简单、可靠、高效。除此之外，你还需要什么呢？
  
最小系统装好之后，拔出U盘，重启系统。现在我们讲讲之后的事情……
1. 第一件事当然是把网线插好，启动你崭新的Debian，在屏幕提示下，输入用户名、密码。
   之后，你就可以通过输入命令来让电脑为你工作了。

   #+BEGIN_QUOTE
   【注意】如果你的笔记本比较新潮，比如我新买的华为Honor Magicbook，没提供有线网接口，而且
   我们刚装好的最小系统里没有本机的无线网卡驱动，那么，请先参看[[#app1][本文末尾的附录：没有有线网卡怎么办？]]
   联网之后再继续。
   #+END_QUOTE

   好了，假设你解决了所有的网络问题，现在我们可以继续了……一个“最小系统”干不了多少事情，所
   以我们先要安装更多的应用程序。注意，安装配置系统是管理员的工作，所以下面的操作都需要以
   管理员的身份来进行。如果你没有以管理员的身份登录（命令行提示符是 =$= ），那么你现在就输
   入命令：
   : $ su
   然后输入管理员密码，你就成为管理员了（命令行提示符变成了 =#= ）。注意看命令行的提示符：
   - =$= 代表普通用户；
   - =#= 代表root。
     
   【注意】如果你在安装最小系统的时候没有设置root密码，那么现在显然无法用 =su= 命令，那么
   你直接用 =sudo= 命令就好了。
   
   后面的安装配置工作显然是需要联网的，所以，先检查一下你的网络状况：
   #+BEGIN_SRC sh
   ip a
   #+END_SRC
   上面这行命令会列出你所有的网卡。仔细看一下，是否有一块网卡叫 =ethX= (=X= 是个数字，
   通常就是 =0=. 如果是 =1= 或者 =2= 也没关系)，或者叫 =enpXsY= (=X= 和 =Y= 都是数字)。仔细看看这块网卡是否已经获取到了IP地址。
   如果你能看到类似下面这行信息，那就没问题了。
   : inet 192.168.1.110/24 brd 192.168.1.255 scope global dynamic eth0
   上面一行中的 =192.168.1.110= 就是我的 =eth0= 网卡获取到的IP地址。如果你看不到这样一
   行，那么先检查一下网线是否插好了，然后敲命令：
   #+BEGIN_SRC sh
   dhclient enpXsY
   #+END_SRC
   【注意】 =enpXsY= 是你的有线网卡的名字，也许是 =ethX= 。把 =X,Y= 换成相应的数字。

   上面这条命令就是用来获取IP地址的。没什么意外的话，你马上就可以获取到IP了。之后，再敲
   =ip a= 命令确认一下。还可以 =ping= 一下，比如 =mirrors.163.com= 看看网络是否联通了。

   【注意】如果你用的是无线网卡，那么关于联网密码设置问题，请先参看[[#app2][本文末尾的附录：无线联网时的密码设置]]。
      
2. 修改 =sources.list= 文件
   #+BEGIN_SRC sh 
   nano /etc/apt/sources.list
   #+END_SRC
   把这个文件里原有的内容全部删除掉，然后添加下面这三行：
   #+BEGIN_EXAMPLE
   deb http://mirrors.163.com/debian testing main non-free contrib
   deb http://mirrors.163.com/debian testing-updates main non-free contrib
   deb http://mirrors.163.com/debian testing-proposed-updates main non-free contrib
   #+END_EXAMPLE

3. 存盘退出后，刷新一下软件包列表，并更新你的最小系统：
   #+BEGIN_SRC sh
   apt update && apt dist-upgrade
   #+END_SRC
   网络顺畅的话，这一步要花十几分钟的时间。
4. 现在，“机房装了什么，我就要装什么”。那就先把机房系统的软件清单弄到手，在[[https://cs6.swfu.edu.cn/~wx672/debian-install/list.laptop][这里]]。
   这是我个人Debian笔记本电脑上的软件包列表。用 =wget= 把[[https://gitlab.swfu.edu.cn/wx672/lecture_notes/blob/master/linux/tutorials/install/deb-pkg-list/laptop][这个软件清单]]下载：
   #+BEGIN_SRC sh
   cd

   wget  https://cs6.swfu.edu.cn/~wx672/lecture_notes/linux/tutorials/install/deb-pkg-list/laptop
   #+END_SRC
   【注意】这一步要以普通用户的身份来做，不要用root！注意看命令行的提示符：
   - =$= 代表普通用户；
   - =#= 代表root；
   - 如果[[https://cs6.swfu.edu.cn/]]这个网址不好使的话，你可以试试：
     - https://github.com/wx672/lecture-notes/blob/master/linux/tutorials/install/deb-pkg-list/laptop
5. 然后，开始大批量安装软件包：
   #+BEGIN_SRC sh
   apt-get install $(cat laptop)
   #+END_SRC
   
   如果网络顺畅的话，这一步大概需要半个小时。通常，安装过程是不需要人为干预的。但有的软件
   包在安装过程中，会停下来问你「Yes/no」。这种时候，你最好耐心把屏幕提示看明白。一般来讲，
   直接按「回车」就好。
6. 一切顺利的话，网卡、声卡、显卡……都不需要额外的操心。但如果运气不太好的话（这通常是人品
   问题，因为你以学习的名义向家里要钱，最终却为了玩游戏而买了个声卡、显卡都特新潮的游戏机），
   那么……假设你幡然悔悟了，可以看看本文末尾的附录：[[#app3][关于硬件配置]]。
7. 如果像我一样，你也是[[#app2][用USB无线网卡完成的安装]]，那么现在你应该可以拔掉USB无线网卡了。同时
   把刚才添加进 =/etc/network/interfaces= 文件的四行删除，或者注释掉。重启系统之后，用
   =nmtui= 来连接无线网：
   #+BEGIN_SRC sh
   sudo nmtui
   #+END_SRC
   这是个界面挺友好的小工具，不用人教，你就会用。
      
** 配置

*** sudo
=sudo= 的时候总要问密码，是不是很烦？那就不让它问了：
1. 变身root
   #+BEGIN_SRC sh
   su
   #+END_SRC
   输入密码，变成root。然后，
2. 建立一个新文件
   #+BEGIN_SRC sh
   nano /etc/sudoers.d/your-user-name
   #+END_SRC
   【注意】把 =your-user-name= 改成你自己的用户名。
3. 在里面写这么一行：
   : your-user-name  ALL = NOPASSWD: ALL
   【注意】把 =your-user-name= 改成你自己的用户名。
4. 改一下权限：
   #+BEGIN_SRC sh
   chmod 0440 /etc/sudoers.d/your-user-name
   #+END_SRC
   这以后 =sudo= 就不再问密码了。
5. 退回普通用户身份：
   #+BEGIN_SRC sh
   exit
   #+END_SRC
*** COMMENT dotfile
现在你的系统和机房的差不多一样了，唯一的差别就是你还没配置呢。
配置是个琐碎事，比较省事的办法就是把我的配置文件拷贝过来。最省事的拷贝方式就是
git（ *以普通用户的身份来做* ）：
#+BEGIN_SRC sh
cd

git clone https://github.com/wx672/dotfile.git
#或者
git clone https://cs6.swfu.edu.cn/~wx672/dotfile/.git
#+END_SRC

上面三个网址应该都可以。 =git= 是著名的源代码管理工具，也就是版本控制工具。用它来管理配置文
件也非常顺手。上面的命令完成之后， =ls= 一下，应该可以看到，你的 =$HOME= 目录里多了一个子
目录 =dotfile= ，里面放的都是杂七杂八的配置文件。
       
现在把 =dotfile= 目录里所有以 =dot.= 开头的文件和目录都链接到 =$HOME= 目录里，
1) 先确保你在 =$HOME=:
   #+BEGIN_SRC sh
   cd
   #+END_SRC
2) 把旧的 =.bash*= 文件都删掉：
   #+BEGIN_SRC sh
   rm -f .bash*
   #+END_SRC
3) 做链接：
   #+BEGIN_SRC sh
   ln -sf dotfile/dot.* .
   ln -sf dotfile/help/dot.* .
   #+END_SRC
   现在 =ls= 一下，你会发现 =$HOME= 目录里有了很多 =dot.= 开头的文件。
4) 把所有的 =dot.= 都变成 =.=, 也就是把文件名前面的 =dot= 都去掉，只留下 =.=:
   #+BEGIN_SRC sh
   rename 's/dot//' dot.*
   #+END_SRC
   现在用 =ls -al= 检查一下，我们需要的配置文件（也就是‘点’开头的文件）应该都在 =$HOME= 目录里了。
5) 顺手把我准备好的「帮助墙纸」也下载下来吧。墙纸上列出了我们最常用的快捷键。
   #+BEGIN_SRC sh
   wget -O .keys.png https://cs6.swfu.edu.cn/~wx672/debian-install/keys.png
   #+END_SRC
   等以后在XWindow环境下，按 =Super-F1= 应该就可以弹出这张墙纸了。
  （ =Super= 键就是键盘左下方的 =Win= 键）

  # 【注意】 由于网络管控加强了， =cs2.swfu.edu.cn= 的域名解析被关掉了，所以，你要修改一下
  #  =/etc/hosts= 文件。很简单，在这个文件里添加如下一行：
  #  : 202.203.132.242  cs2.swfu.edu.cn
6) 我的Emacs配置里用到了很多插件，自然你也需要它们，否则Emacs不能正常工作。
   1) 先把我的插件包下载下来
      #+BEGIN_SRC sh
      wget http://cs6.swfu.edu.cn/~wx672/debian-install/elpa.tgz
      #+END_SRC
   2) 放到Emacs的配置文件目录里
      #+BEGIN_SRC sh
      mv elpa.tgz ~/.emacs.d/
      #+END_SRC
   3) 然后解压缩
      #+BEGIN_SRC sh
      cd ~/.emacs.d
      tar zxf elpa.tgz
      #+END_SRC
   4) 测试一下
      #+BEGIN_SRC sh
      emacs --debug-init
      #+END_SRC
      如果报错，就把出错信息发给我（wx672ster@gmail.com）。  
      当然，如果你能自己解决问题那再好不过了。
*** Auto login
简单起见，我们只讲“怎么做”，先不管“为什么”。（需要sudo，也就是用root身份来做）
1. 拷贝配置文件
   #+BEGIN_SRC sh
   sudo cp -r ~/dotfile/etc/systemd/system/getty@tty1.service.d/ /etc/systemd/system/
   #+END_SRC
   注意, =~= (也就是波浪线), 它代表你的 =$HOME= 目录。
2. 修改
   #+BEGIN_SRC sh
   sudo nano /etc/systemd/system/getty@tty1.service.d/override.conf
   #+END_SRC
   在这个 =override.conf= 文件里应该只有如下三行：
   #+BEGIN_EXAMPLE
   [Service]
   ExecStart=
   ExecStart=-/sbin/agetty --autologin wx672 --noclear %I $TERM
   #+END_EXAMPLE
   你只要把其中的 =wx672= 改成你自己的用户名就可以了。

*** 中文语言环境
注意，我们其实并不需要一套纯正的中文环境，我们只是需要输入和阅读中文。
其它方面，比如窗口菜单、提示信息、man page，我觉得还是看英文比较好。

千万别说“我英文差，还是用中文算了”。要知道，就是因为你
“这个差、那个不行、这个不懂、那个不会……”所以你才来上学的，不是吗？
既然知道“差”，那就该好好学习，提高它。
英文是用熟的，如果你总是回避它，就总也不会长进了。

好了，下面我们来配置一个简单的中文环境。相关中文字体我们已经安装好了。下面只需要：
1. 安装中文字体和输入法。
   #+BEGIN_SRC sh
   cd
   wget https://cs6.swfu.edu.cn/~wx672/debian-install/list.chinese
   sudo apt install `cat list.chinese`
   #+END_SRC

2. 选择 =locale=
   #+BEGIN_SRC sh
   sudo dpkg-reconfigure locales
   #+END_SRC
   在这一长串列表中，只要选中
   - [X] =en_US.UTF-8 UTF-8=
   - [X] =zh_CN.GB18030 GB18030=
   - [X] =zh_CN.UTF-8 UTF-8=
   就可以了。默认语言环境选 =None= 。
3. 拷贝一个小配置文件：
   #+BEGIN_SRC sh
   sudo cp ~/dotfile/etc/default/locale /etc/default
   #+END_SRC
4. 顺带再拷贝一个小文件：
   #+BEGIN_SRC sh
   sudo cp ~/dotfile/etc/default/keyboard /etc/default
   #+END_SRC
   这是把你的 =CapsLock= 键变成 =Ctrl= 键，
   因为Unix用户经常要用 =Ctrl= 键，从来不用 =CapsLock= 。

   好了，现在安装配置的工作基本就结束了。你可以重启一下系统。
   系统重启后，看到的应该就是学院机房里那个没有桌面的“桌面系统”了。
   不记得快捷键了？按 =Super-F1= 。

   中文输入法，我选用的是 =fcitx=, 因为感觉它的bug要少一些，比较稳定。
   如果你需要配置它的话，就：
   #+BEGIN_SRC sh
   fcitx-configtool
   #+END_SRC
   你最好和我一样，用 =Shift-space= 来激活输入法，因为 =Ctrl-space= 在Emacs里有特殊用途。

   注意：fcitx依赖于dbus-x11，而显然fcitx软件包的维护者忽略了这个小细节。那么我们就自己把
   它装上呗：
   #+BEGIN_SRC sh
   sudo apt install dbus-x11
   #+END_SRC
*** Windows fonts （非必须）                                       :noexport:
Windows系统我不喜欢，但Windows的中文字体还是不错的。
如果你装的是双系统，那么你可以直接从Windows的 =C:\= 盘把字体文件拷贝过来。

如果你和我一样，只装了一个Debian系统，那么就这样：
#+BEGIN_SRC sh
#1. 先下载：
wget http://cs6.swfu.edu.cn/~wx672/debian-install/mstt-chinese.tgz
#2. 解压缩：
tar zxf mstt-fonts-chinese.tgz
#3. 放到该放的地方：
sudo mv msfonts-cn /usr/share/fonts/truetype/
#+END_SRC

*** multiarch （非必须）                                           :noexport:
我们现在一般都是用64位的笔记本电脑，所以我们都是装64位的Linux系统。但有时还是要用到32位的
应用程序。比如在宿舍上网就要用到DrClient认证客户端，它就是个32位应用程序。当你运行它的时候，
肯定会报错，告诉你说缺少某个函数库。所以说，我们的系统还是要支持32位程序才行。怎么办呢？很
简单，
#+BEGIN_SRC sh
sudo dpkg --add-architecture i386
sudo apt update
#+END_SRC
然后，以后再报错说缺少某个32位的函数库的话，就：
#+BEGIN_SRC sh
sudo apt search the-32bit-lib-package
#+END_SRC
找到之后，就
#+BEGIN_SRC sh
sudo apt install the-32bit-lib-package
#+END_SRC
就可以了。注意，通常32位软件包的后面都会有个 =:i386= 做后缀。
不带后缀的都是64位软件包。

* 附录：没有有线网卡怎么办？
:PROPERTIES:
:CUSTOM_ID: app1
:END:

办法很多：
1. 用Android手机的USB Tethering功能。以我自己的手机系统为例（LineageOS 16.0/Android 9），
   很简单，
   1) 用USB线连接手机和电脑；
   2) 在手机的「系统设置」里有个搜索框，在里面输入“tethering”，马上就能找到“Hotspot &
      Tethering”，激活里面的USB Tethering功能就行了；
   3) 在电脑上，敲命令 =ip a= 应该能看到一块有线网卡。比如，
      #+BEGIN_EXAMPLE
      3: enp2s0f4u2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UNKNOWN group default qlen 1000
         link/ether 26:b1:c7:c5:02:1f brd ff:ff:ff:ff:ff:ff
      #+END_EXAMPLE
      从上面的屏幕输出信息可以看到，这块有线网卡的名字是 =enp2s0f4u2= 。然后，以root身份，
      敲下面这条命令：
      #+BEGIN_SRC sh
      sudo dhclient enp2s0f4u2
      #+END_SRC
      你就可以获得一个IP地址了，也就是说，你已经成功联网了。
2. 去找一个USB无线网卡试试。我找到一个Realtek的指甲盖大小的USB无线网卡，不需要驱动，插上就
   能用。我也尝试过两个比较古老的tp-link无线网卡，不好使。
3. 另外，如果你真的和我一样，用的是华为Honor Magicbook，那么也许你不必去找USB网卡，可以先
   试试能否让内置网卡工作。Magicbook的内置网卡是Intel的。既然完成后面的安装步骤之后它能正
   常工作，那我想，现在使使劲应该也能解决问题吧。但毕竟我还没有亲自尝试过，所以只能先给出
   一些想法：
   - 之所以内置网卡暂时不工作，我怀疑是我们用来安装最小系统的iso文件不够新。它是以Debian稳
     定版（stretch）为基础做出来的，其中的内核（4.9）和相应固件（firmware-iwlwifi）都偏旧，
     可能尚不支持这么新潮（2018年）的硬件。所以，可以试试把内核和相应固件从稳定版更新到测
     试版（buster）。在没有网络连接的情况下，显然这需要我们另找办法下载，并手动安装一些软
     件包，包括：
     * [[https://packages.debian.org/buster/linux-image-amd64][linux-image-amd64]]
     * [[https://packages.debian.org/buster/firmware-iwlwifi][firmware-iwlwifi]]
     * 还有若干被上述两个软件包依赖的软件包
   - 一些参考链接：
     * [[https://unix.stackexchange.com/questions/283722/how-to-connect-to-wifi-from-command-line][How to connect to WiFi from command line?]]
     * [[https://askubuntu.com/questions/974/how-can-i-install-software-or-packages-without-internet-offline][How can I install software packages without Internet?]]
     * [[https://commandlinefanatic.com/cgi-bin/showarticle.cgi?article=art016][Installing Debian without a Network]]
     * [[https://wiki.debian.org/WiFi][Debian Wiki --- WiFi]]       
4. 如果上述办法都不成功，那么这招肯定行，就是笨点。直接去下面这些镜像站下载完整的安装盘。
   - http://mirrors.163.com/debian-cd/current/amd64/iso-dvd/
   - [[http://mirrors.ustc.edu.cn/debian-cd/current/amd64/iso-dvd/]]

   完整的DVD安装盘包含3个iso文件，你可以先下载第一个试试。如果里面有了你需要的无线网卡驱动
   和相关程序，那么激活网卡之后，你就可以直接网络安装了，无需下载其它的iso文件了。

** 无线联网时的密码设置
:PROPERTIES:
:CUSTOM_ID: app2
:END:

无线联网时通常是要输入密码的，所以我们需要修改一个配置文件 =/etc/network/interfaces= ，很
简单，编辑这个小文件：
#+BEGIN_SRC sh
sudo nano /etc/network/interfaces
#+END_SRC
=nano= 是个很简单的编辑器，用起来应该不会有什么困难吧。 
=nano= 窗口的最下两行都是快捷键提示，最重要的两个是：
1. 存盘： =Ctrl-o=
2. 退出： =Ctrl-x=

在这个文件的最后加上如下几行：
#+BEGIN_EXAMPLE
iface tmp inet dhcp
wireless-essid MY-ESSID
wpa-ssid MY-ESSID
wpa-psk PASSWORD
#+END_EXAMPLE
【注意】把 =MY-ESSID= 和 =PASSWORD= 换成你自己的无线网络的名字和密码。

然后，用下面这条命令来连接无线网：
#+BEGIN_SRC sh
sudo ifup WLANCARD=tmp
#+END_SRC
【注意】把 =WLANCARD= 换成你自己的无线网卡的名字，网卡的名字通常是w开头的，比如我的无线
网卡名字就是 =wlp1s0= ，那么我用的联网命令就是：
#+BEGIN_SRC sh
sudo ifup wlp1s0=tmp
#+END_SRC

* 附录：关于硬件配置
:PROPERTIES:
:CUSTOM_ID: app3
:END:

首先，当然是要搞清楚你到底有哪些硬件。很简单：
#+BEGIN_SRC sh
lspci
#想看更详细的信息，就：
lspci -vvv
#+END_SRC

总之， =lspci= 能列出你所有外围设备的详细信息。然后，如果
你的有线或无线网卡是Realtek，或者Atheros牌子的，那么你需要安装相应的firmware（固件）。
#+BEGIN_SRC sh
#如果是Realtek网卡，就：
sudo apt install firmware-realtek
#如果是Atheros网卡，就：
sudo apt install firmware-atheros
#如果是Intel网卡，就：
sudo apt install firmware-iwlwifi
#+END_SRC

并不是所有的网卡都需要安装相应的固件，甚至上面提到的Realtek, Atheros, Intel网卡，即使不
装固件，网卡也可能工作，但未必那么稳定。所以，既然有固件，那还是装上比较
好。同样，针对声卡、显卡，Debian库里也有很多固件。下面这条命令可以列出库里所有的固件包：
#+BEGIN_SRC sh
aptitude search ^firmware
#+END_SRC
大概也就三十几个吧。找找有没有和你的硬件相关的。怎么知道是否相关呢？看看固件包的详细信
息呗，比如：
#+BEGIN_SRC sh
apt show firmware-atheros
#+END_SRC
于是就知道了这个固件适用于哪些网卡。

关于显卡，听说Nvidia显卡比较难伺候，好在我从来没碰到过，因为只有游戏本才配置这么贵的显
卡。如果你（曾经人品不好）不幸碰到了，那么，省事起见，我建议你暂时不要用它，就用主板上内置
的（通常是Intel）显卡就好。直到有一天你成了一个熟练的Linux用户之后，再把它激活。
* 附录：LaTeX （非必须）
在Linux平台，你不用非要学习使用LaTeX来排版你的文章、报告、论文，
因为你已经有了一套开源的office软件。如果前面的事情你都顺利完成了，那么现在只需要按
=Super-o= （键盘上那个Win键，我们叫它Super键）
就可以调出著名的Libreoffice了。然后，你完全可以像在Windows平台上那样写东西。

但是，「你们这些使用Linux的人，不就是“装逼、扮酷”嘛」，既然他嫌你酷，那么你就再酷一点嘛。
TeXLive是一套优秀而庞大的排版系统，我们只需要安装使用它提供的少数十几个软件包就够了。

我个人用到的LaTeX软件包列表在[[http://cs2.swfu.edu.cn/~wx672/debian-install/list.texlive][这里]]：
: $ wget http://cs2.swfu.edu.cn/~wx672/debian-install/list.texlive
: $ sudo apt install `cat list.texlive`
上面这两行命令和我们前面用到的很相似吧。第一行是下载 =list.texlive= 文件，
也就是我的TeXLive软件包列表。第二行是安装文件里的所有软件包。
安装好以后，如果想“酷”，那么你要做如下几件事情：
1. 熟悉Emacs的使用。为什么非要用Emacs啊？因为它为编辑LaTeX文件提供了最好的支持。而且，我不
   想在这里唠唠叨叨，如果你想看我为Emacs做的广告，可以看我在「知乎」上写的一个小答案：
   - https://www.zhihu.com/question/30955165/answer/70799403
     
   顺带贩卖一下我为Debian做的广告：
   - https://www.zhihu.com/question/19676224/answer/29321011
     
2. 学习一点关于LaTeX的基础知识，我觉得两三个小时应该够了吧。我推荐 =lshort=:
   : texdoc -l lshort
   上面这条命令会列出几个相关的PDF文件，你要关注的是前两个：
   : 1 /usr/share/texlive/texmf-dist/doc/latex/lshort-english/lshort.pdf
   : 2 /usr/share/texlive/texmf-dist/doc/latex/lshort-chinese/lshort-zh-cn.pdf
   我鼓励你看英文原版，至少应该中英对照着看吧。
3. 如果你打算尝试用LaTeX来写你的毕业论文，那么我为你提供了点小帮助：
   - https://github.com/wx672/texmf/tree/master/doc/latex/swfu/swfcthesis
   - http://cs2.swfu.edu.cn/~wx672/texmf/doc/latex/swfu/swfcthesis/
   上面两个链接里的内容是一样的，看哪个都行。有问题可以向我求助。
   
   Happy LaTeXing!

